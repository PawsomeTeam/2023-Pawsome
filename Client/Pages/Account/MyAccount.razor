@page "/account"
@inject NavigationManager navigationManager
@inject IAuthService authService
@inject IOrderService orderService
@inject IAdoptionService _adoptionService


<AuthorizeView>
    <Authorized>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
            <MudItem xs="12" Class="pa-4 d-flex flex-column justify-center">
                <MudText Align="Align.Center" Typo="Typo.h2">Welcome @context.User.Identity!.Name !!</MudText>
                <MudText Align="Align.Center" Typo="Typo.body1" Class="mt-4">You can find some information related to your Account, Adoptions and Orders here</MudText>
            </MudItem>
            <MudText Color="@Color.Error" Class="mb-3"> @error </MudText>
            <MudTabs Outlined="true" Position="Position.Top" Rounded="true" Border="true" ApplyEffectsToContainer="true" Class="mt-8" PanelClass="pa-6 white" Elevation="4" Centered="true">
                <MudTabPanel Text="Account Settings" Icon="@Icons.Material.Filled.Settings">
                    <div>

                        <MudText Typo="Typo.body1" Class="mb-4">
                            <b>Full Name:</b> @CurrentUser.FullName
                        </MudText>
                        <MudText Typo="Typo.body1" Class="mb-4">
                            <b>Email:</b> @CurrentUser.Email
                        </MudText>
                        <MudText Typo="Typo.body1" Class="mb-4">
                            <b>Phone:</b> @CurrentUser.PhoneNumber
                        </MudText>
                        <MudText Typo="Typo.body1" Class="mb-4">
                            <b>UserName:</b> @CurrentUser.UserName
                        </MudText>
                        <MudButton Align="Align.Center" Link="/account/update" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Large" Class="mt-4 mx-auto">Edit</MudButton>
                    </div>

                </MudTabPanel>
                <MudTabPanel Text="Adoption" Icon="@Icons.Material.Filled.Favorite">
                    @if(adoptionsList != null && adoptionsList.Count > 0){

                    <MudTable Items="@adoptionsList" Hover="true">
                        <HeaderContent>
                            <MudTh>Adoptee</MudTh>
                            <MudTh>Request date</MudTh>
                            <MudTh>Note</MudTh>
                            <MudTh>State</MudTh>
                        </HeaderContent>
                        <RowTemplate Context="adoption">
                            <MudTd DataLabel="Adoptee">
                            @{var animalUrl = $"animals/{adoption.AdopteeId}";}
                            <MudLink Href="@animalUrl">
                                    <MudImage ObjectFit="ObjectFit.Cover" Height="100" Width="100" Src="@adoption.AdoppteeMainImageURL" Alt="@adoption.AdopteeName" Elevation="25" Class="rounded-lg" />
                            </MudLink>
                                <MudText Typo="Typo.h6">@adoption.AdopteeName</MudText>
                                <MudText Typo="Typo.body1"><i>@adoption.AdopteeType</i></MudText>
                            </MudTd>
                            <MudTd DataLabel="Submission">
                                <MudText Typo="Typo.body1"  Class="d-flex gap-2 align-center"><MudIcon Icon="@Icons.Material.Filled.CalendarMonth"/>@adoption.CreatedAt.ToString("yyyy-MM-dd")</MudText>
                                <MudText Typo="Typo.body1" Class="d-flex gap-2 align-center"><MudIcon Icon="@Icons.Material.Filled.AccessTime"/>@adoption.CreatedAt.ToString("hh:mm:ss")</MudText>
                            </MudTd>
                            <MudTd DataLabel="Notes">
                                @if(adoption.NoteForAdopter != null){
                                    <MudTooltip>
                                        <ChildContent>
                                        <MudText Typo="Typo.body1"  Class="d-flex gap-2 align-center"> <MudIcon Icon="@Icons.Material.Filled.StickyNote2"/>Note</MudText>
                                        </ChildContent>
                                        <TooltipContent>
                                            <MudContainer MaxWidth="MaxWidth.ExtraSmall">
                                                <MudText Typo="Typo.body1"  Class="d-flex gap-2 align-center">@adoption.NoteForAdopter</MudText>
                                            </MudContainer>
                                        </TooltipContent>
                                    </MudTooltip>
                                }
                            </MudTd>
                            <MudTd DataLabel="State">
                                @if(adoption.State != null){
                                    if(adoption.State == "Completed"){
                                    <MudText Typo="Typo.body1"  Class="d-flex gap-2 align-center" Color="Color.Success"><MudIcon Icon="@Icons.Material.Filled.Check"/>@adoption.State</MudText>
                                    } else if(adoption.State == "Canceled"){
                                    <MudText Typo="Typo.body1" Class="d-flex gap-2 align-center" Color="Color.Error"><MudIcon Icon="@Icons.Material.Filled.Cancel"/>@adoption.State</MudText>
                                    } else {
                                    <MudText Typo="Typo.body1" Class="d-flex gap-2 align-center" Color="Color.Warning"><MudIcon Icon="@Icons.Material.Filled.Pending"/>@adoption.State</MudText>
                                    }
                                    <MudText Typo="Typo.body1" Class="d-flex gap-2 align-center mb-2"><MudIcon Icon="@Icons.Material.Filled.CalendarMonth"/>@adoption.StateDate?.ToString("yyyy-MM-dd")</MudText>      
                                } else {
                                    <MudText Typo="Typo.body1"  Class="d-flex gap-2 align-center"><MudIcon Icon="@Icons.Material.Filled.HourglassEmpty"/>Requested</MudText>             
                                    <MudText Typo="Typo.body1"  Class="d-flex gap-2 align-center"><small>Contacting you shortly</small></MudText>             
                                }             
                            </MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager PageSizeOptions="new int[]{10, 50, 100}" />
                        </PagerContent>
                    </MudTable>
                    }else{
                        <MudText Typo="Typo.body1" Class="mb-4" Align="Align.Center">No Adoptions yet</MudText>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Orders" Icon="@Icons.Material.Filled.ShoppingCart">
                    <MudTable Items="@Orders" Context="orders" Hover="true" LoadingProgressColor="Color.Primary">
                        <HeaderContent>
                            <MudTh>Order Id</MudTh>
                            <MudTh>Products</MudTh>
                            <MudTh>Price</MudTh>
                            <MudTh>QTY</MudTh>
                            <MudTh>Total</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Order Id">@orders.Id</MudTd>
                            <MudTd DataLabel="Order Items">
                                @foreach (var item in orders.OrderItems)
                                {
                                    string DisplayUrl = $"/shop/products/{item.ProductId}";
                                    <MudLink Href="@DisplayUrl">
                                        <MudText Typo="Typo.subtitle2">@item.ProductName</MudText>
                                    </MudLink>
                                }
                            </MudTd>
                            <MudTd DataLabel="Items Price">
                                @foreach (var item in orders.OrderItems)
                                {
                                    <MudText Typo="Typo.subtitle2">@item.Price</MudText>
                                }
                            </MudTd>
                            <MudTd DataLabel="Items Qty">
                                @foreach (var item in orders.OrderItems)
                                {
                                    <MudText Typo="Typo.subtitle2">@item.Qty</MudText>
                                }
                            </MudTd>
                            <MudTd DataLabel="Order Total">
                                @{
                                    Decimal total = 0;
                                    foreach (var item in orders.OrderItems)
                                    {
                                        total += item.Price * item.Qty;
                                    }
                                    <MudText Typo="Typo.subtitle2">@total.ToString("C")</MudText>
                                }
                            </MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager PageSizeOptions="new int[] { 10, 50, 100 }"/>
                        </PagerContent>
                    </MudTable>
                </MudTabPanel>
            </MudTabs>
        </MudContainer>
    </Authorized>
    <Authorizing>
        <h1>Loading ...</h1>
    </Authorizing>
</AuthorizeView>


@code
{
    private CurrentUser CurrentUser { get; set; } = new CurrentUser();
    private List<OrderDto> Orders { get; set; } = new List<OrderDto>();
    private List<AdoptionDetailsForAdopterDto>? adoptionsList;

    string? error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        error = null;
        try
        {
            CurrentUser = await authService.CurrentUserInfo();
            Orders = await orderService.GetItems(CurrentUser.Email);
            if(!CurrentUser.IsAuthenticated){
                navigationManager.NavigateTo("/login");
                return;
            }
            adoptionsList = await _adoptionService.GetAllAdoptionsForCurrentUser();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}