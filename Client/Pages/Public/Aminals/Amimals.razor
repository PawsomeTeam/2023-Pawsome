@page "/animals"

<style>    
    .mud-card,
    .mudCardMediaWrapper {
        overflow: hidden;
        transition: box-shadow 0.3s ease-in-out;
    }
    
    .mud-card a:hover .mud-card-media {
        transform: scale(1.07);
    }
    
    .mud-card-media {
        transition: 0.5s ease-in-out;
    }
</style>


@if(error != null){
    <MudAlert Severity="Severity.Error" Class="mb-16">@error</MudAlert>
    return;
}

@if(loading == true ){
    <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
}else {

  <MudGrid Class="mb-16">
    @foreach(var item in _animals)
    {
        <MudItem xs="12" sm="6" md="4">
            <MudCard>
                <MudCardHeader>
                <CardHeaderContent>
                        <MudText Typo="Typo.h6">@item.Name</MudText>
                        <MudText Typo="Typo.body2">@item.Type</MudText>
                </CardHeaderContent>
                
                    <CardHeaderActions>
                        <MudIconButton Disabled="true" Icon="@Icons.Material.Filled.Favorite" Size="Size.Small" Color="Color.Default" />
                        <MudIconButton Disabled="true" Icon="@Icons.Material.Filled.Share" Size="Size.Small" Color="Color.Default" />
                    </CardHeaderActions>
                </MudCardHeader>
                <a href="/animals/@item.Id">
                    <div class="mudCardMediaWrapper" style="height:200px" >
                        @if(item.Main_Image_Url == null)
                        {
                            <MudCardMedia Image="https://pawsome.blob.core.windows.net/products/2023-02-27-05-04-56-813_dog-1194087_640.jpg" Height="200" />
                        } else {
                            <MudCardMedia Image="@item.Main_Image_Url" Height="200" />
                        }
                    </div>
                
                </a>
                <MudCardContent Class="d-flex justify-space-between align-center">
                    @* <MudText Typo="Typo.body1">@item.Price.ToString("C")</MudText> *@
                    <MudText Typo="Typo.body1">@item.Price.ToString("C")</MudText>
                    @* <MudButton Link="animals/" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Add" Color="Color.Primary">
                        Adopt
                    </MudButton> *@
                </MudCardContent>
            </MudCard>
    </MudItem>               
    }
</MudGrid>
}


@code {

    [Inject] IAnimalService Service { get; set; }

    private bool loading = true;
    private string? error = null;
    private List<AnimalDto> _animals = new();

            @* temp variables *@
    public double temp_price = 400.00;
    public string temp_type = "dog";


    protected override async Task OnInitializedAsync()
    {
        try{
            _animals = await Service.GetAll();
            loading = false;
        } catch (Exception ex)
        {
            error = ex.Message;
        }
        
    }
}
