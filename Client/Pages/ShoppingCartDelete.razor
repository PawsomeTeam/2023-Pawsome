@page "/Checkout/delete"
@inject NavigationManager navigationManager
@inject IShoppingCartService ShoppingCartService
@inject IOrderService OrderService
@inject IAuthService authService
@inherits CheckoutBase

<MudContainer>
    <MudTable Items="@orderDto.OrderItems" Hover="true">
        <HeaderContent>

            <MudTh>Thumbnail</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Price</MudTh>
            <MudTh>Qty</MudTh>
            <MudTh>Total</MudTh>
            <MudTh></MudTh>
        </HeaderContent>

        <RowTemplate>
            @{ string DisplayUrl = $"/shop/products/{context.ProductId}"; }
            <MudTd DataLabel="Image">
                <MudLink Href="@DisplayUrl">
                    <MudImage ObjectFit="ObjectFit.Cover" Height="80" Width="80"
                              Src="@context.ProductImageURL" Alt="@context.ProductName" Elevation="25" Class="rounded-lg"/>
                </MudLink>
            </MudTd>
            <MudTd DataLabel="Name">
                <MudLink Href="@DisplayUrl">
                    <MudText Typo="Typo.subtitle1">@context.ProductName</MudText>
                </MudLink>
            </MudTd>
            <MudTd DataLabel="Quantity">@context.Qty</MudTd>
            <MudTd DataLabel="Price">@context.Price.ToString("C")</MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>

@code
{
    private CurrentUser CurrentUser { get; set; } = new CurrentUser();
    private OrderDto orderDto { get; set; } = new OrderDto();

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await authService.CurrentUserInfo();
        var cartItemDto = await ShoppingCartService.DeleteAllItems(CurrentUser.Email);
        ShoppingCartService.RaiseEventOnShoppingCartChanged(0);
        orderDto = await OrderService.GetItem(CurrentUser.Email);
        Console.WriteLine(OrderId);
        Console.WriteLine("ID : " + orderDto.Id);
    }
}