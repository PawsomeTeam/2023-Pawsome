@page "/Checkout/delete"
@inject NavigationManager navigationManager
@inject IShoppingCartService ShoppingCartService
@inject IOrderService OrderService
@inject IAuthService authService
@inherits CheckoutBase

<MudContainer>

    <MudTable Items="@ShoppingCartItems" Hover="true">
        <HeaderContent>

            <MudTh>Thumbnail</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Price</MudTh>
            <MudTh>Qty</MudTh>
            <MudTh>Total</MudTh>
            <MudTh></MudTh>
        </HeaderContent>

        <RowTemplate>
            @foreach (var item in orderDto.OrderItems)
            {
                string DisplayUrl = $"/shop/products/{@item.ProductId}";
                <MudTd DataLabel="Image">
                    <MudLink Href="@DisplayUrl">
                        <MudImage ObjectFit="ObjectFit.Cover" Height="80" Width="80" Src="@context.ProductImageURL" Alt="@context.ProductName" Elevation="25" Class="rounded-lg"/>
                    </MudLink>
                </MudTd>
                <MudTd DataLabel="Name">
                    <MudLink Href="@DisplayUrl">
                        <MudText Typo="Typo.subtitle1">@item.ProductName</MudText>
                    </MudLink>
                </MudTd>
                <MudTd DataLabel="Quantity">@item.Qty</MudTd>
                <MudTd DataLabel="Price">@item.Price.ToString("C")</MudTd>
            }
        </RowTemplate>
    </MudTable>
</MudContainer>

@code
{
    private CurrentUser CurrentUser { get; set; } = new CurrentUser();
    private OrderDto orderDto { get; set; } = new OrderDto();

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await authService.CurrentUserInfo();
        var cartItemDto = await ShoppingCartService.DeleteAllItems(CurrentUser.Email);
        ShoppingCartService.RaiseEventOnShoppingCartChanged(0);
        var orderItemDto = await OrderService.GetItem(52);
        Console.WriteLine("ID : " + OrderId);
    }
}