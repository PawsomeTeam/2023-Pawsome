@page "/manage/orders"
@inject IOrderService orderService

<MudText Typo="Typo.h3" Class="mb-8" Align="Align.Center">Manage Orders</MudText>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    <MudTable Items="@Orders" Context="orders" Hover="true" LoadingProgressColor="Color.Primary">
        <HeaderContent>
            <MudTh>Order Id</MudTh>
            <MudTh>User Email</MudTh>
            <MudTh>Products</MudTh>
            <MudTh>Price</MudTh>
            <MudTh>QTY</MudTh>
            <MudTh>Total</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Order Id">@orders.Id</MudTd>
            <MudTd DataLabel="Username">@orders.UserEmail</MudTd>
            <MudTd DataLabel="Order Items">
                @foreach (var item in orders.OrderItems)
                {
                    string DisplayUrl = $"/shop/products/{item.ProductId}";
                    <MudLink Href="@DisplayUrl">
                        <MudText Typo="Typo.subtitle2">@item.ProductName</MudText>
                    </MudLink>
                }
            </MudTd>
            <MudTd DataLabel="Items Price">
                @foreach (var item in orders.OrderItems)
                {
                    <MudText Typo="Typo.subtitle2">@item.Price</MudText>
                }
            </MudTd>
            <MudTd DataLabel="Items Qty">
                @foreach (var item in orders.OrderItems)
                {
                    <MudText Typo="Typo.subtitle2">@item.Qty</MudText>
                }
            </MudTd>
            <MudTd DataLabel="Order Total">
                @{
                    Decimal total = 0;
                    foreach (var item in orders.OrderItems)
                    {
                        total += item.Price * item.Qty;
                    }
                    <MudText Typo="Typo.subtitle2">@total.ToString("C")</MudText>
                }
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 50, 100 }"/>
        </PagerContent>
    </MudTable>
</MudContainer>


@code
{
    private List<OrderDto> Orders { get; set; } = new List<OrderDto>();

    string? error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        error = null;
        try
        {
            Orders = await orderService.AllItems();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}