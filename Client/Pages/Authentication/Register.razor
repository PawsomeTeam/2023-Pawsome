@page "/register"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

@using System.ComponentModel.DataAnnotations
<MudText Align="Align.Center" Typo="Typo.h3">Register</MudText>

<EditForm Model="registerRequest" OnValidSubmit="OnSubmit">

    <DataAnnotationsValidator /> 
    <div class="d-flex flex-column align-stretch gap-3">
        <MudTextField T="string" Label="First Name" 
                      @bind-Value="registerRequest.FirstName"
                      For="@(() => registerRequest.FirstName)" />

        <MudTextField T="string" Label="Last Name"
                      @bind-Value="registerRequest.LastName"
                      For="@(() => registerRequest.LastName)" />

        <MudTextField T="string" Label="Username" 
                      @bind-Value="registerRequest.UserName"
                      For="@(() => registerRequest.UserName)" />

        <MudTextField T="string" Label="Password" 
                      InputType="InputType.Password"
                      @bind-Value="registerRequest.Password"
                      For="@(() => registerRequest.Password)" />

        <MudTextField T="string" Label="Password Confirmation" 
                      InputType="InputType.Password"
                      @bind-Value="registerRequest.PasswordConfirm"
                      For="@(() => registerRequest.PasswordConfirm)" />

        <MudTextField T="string" Label="Email" 
                      InputType="InputType.Email"
                      @bind-Value="registerRequest.Email"
                      For="@(() => registerRequest.Email)" />

        <MudTextField T="string"  Label="Email" 
                      @bind-Value="registerRequest.PhoneNumber"
                      For="@(() => registerRequest.PhoneNumber)" />

        <MudButton Variant="Variant.Filled" Color="Color.Primary"
                   Class="my-3 mx-auto"
                   ButtonType="ButtonType.Submit">
            Register
        </MudButton>
         <MudText Color="@Color.Error" Class="mb-3"> @error </MudText>

        <div class="d-flex align-center justify-space-between">
            <MudButton Link="/" Variant="Variant.Text" Style="text-transform:none" StartIcon="@Icons.Material.Filled.KeyboardBackspace" Color="Color.Primary">Home</MudButton>
            <div class="d-flex flex-column align-items-end justify-content-end">
                <MudText Align="Align.End">Already have an Account? </MudText>
                <div class="d-flex justify-end flex-grow-1">

                <MudButton Link="/login" Variant="Variant.Text" Style="text-transform:none" Color="Color.Primary">Login</MudButton>
                </div>
            </div>
        </div>    
    </div>
</EditForm>

@functions {
    RegisterRequest registerRequest { get; set; } = new RegisterRequest();
    string error { get; set; }
    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

        protected override async Task OnInitializedAsync()
    {

    }
}